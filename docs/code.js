!function(n,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.theHourglass=e():n.theHourglass=e()}(self,(()=>(()=>{"use strict";var n={931:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),a=t.n(r),s=t(645),o=t.n(s)()(a());o.push([n.id,"/* TEMP */\nbody {\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.hourglass__container {\n  height: 30rem;\n  width: 17rem;\n  /* border: 1px solid black; */\n  postition: relative;\n}\n\n.hourglass__rim {\n  height: 6%;\n  width: 100%;\n  margin: 0 auto;\n  border: 1px solid black;\n}\n\n.hourglass__rim--bottom {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.hourglass__rim--bottom input {\n  width: 15%;\n  position: relative;\n  left: 1ch;\n  display: flex;\n}\n\n.hourglass__dome {\n  position: relative;\n  margin: 0 auto;\n  height: 44%;\n  width: 93%;\n  border: 1px solid black;\n  border-radius: 0 0 50% 50%;\n  overflow: hidden;\n  display: flex;\n  align-items: flex-end;\n  /* background: white; */\n}\n\n.hourglass__dome--top {\n  border-radius: 0 0 50% 50%;\n  z-index: 100;\n  /* background: green; */\n}\n.hourglass__dome--bottom {\n  border-radius: 50% 50% 0 0;\n  z-index: 1000;\n  /* background: red; */\n}\n\n.hourglass__sand {\n  width: 100%;\n  background: black;\n}\n\n.hourglass__falling-sand {\n  width: 1%;\n  height: 100%;\n  background: black;\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n}\n","",{version:3,sources:["webpack://./themes/styles.css"],names:[],mappings:"AAAA,SAAS;AACT;EACE,aAAa;EACb,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,6BAA6B;EAC7B,mBAAmB;AACrB;;AAEA;EACE,UAAU;EACV,WAAW;EACX,cAAc;EACd,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,UAAU;EACV,kBAAkB;EAClB,SAAS;EACT,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,cAAc;EACd,WAAW;EACX,UAAU;EACV,uBAAuB;EACvB,0BAA0B;EAC1B,gBAAgB;EAChB,aAAa;EACb,qBAAqB;EACrB,uBAAuB;AACzB;;AAEA;EACE,0BAA0B;EAC1B,YAAY;EACZ,uBAAuB;AACzB;AACA;EACE,0BAA0B;EAC1B,aAAa;EACb,qBAAqB;AACvB;;AAEA;EACE,WAAW;EACX,iBAAiB;AACnB;;AAEA;EACE,SAAS;EACT,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;EAClB,SAAS;EACT,2BAA2B;AAC7B",sourcesContent:["/* TEMP */\r\nbody {\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.hourglass__container {\r\n  height: 30rem;\r\n  width: 17rem;\r\n  /* border: 1px solid black; */\r\n  postition: relative;\r\n}\r\n\r\n.hourglass__rim {\r\n  height: 6%;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  border: 1px solid black;\r\n}\r\n\r\n.hourglass__rim--bottom {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.hourglass__rim--bottom input {\r\n  width: 15%;\r\n  position: relative;\r\n  left: 1ch;\r\n  display: flex;\r\n}\r\n\r\n.hourglass__dome {\r\n  position: relative;\r\n  margin: 0 auto;\r\n  height: 44%;\r\n  width: 93%;\r\n  border: 1px solid black;\r\n  border-radius: 0 0 50% 50%;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  /* background: white; */\r\n}\r\n\r\n.hourglass__dome--top {\r\n  border-radius: 0 0 50% 50%;\r\n  z-index: 100;\r\n  /* background: green; */\r\n}\r\n.hourglass__dome--bottom {\r\n  border-radius: 50% 50% 0 0;\r\n  z-index: 1000;\r\n  /* background: red; */\r\n}\r\n\r\n.hourglass__sand {\r\n  width: 100%;\r\n  background: black;\r\n}\r\n\r\n.hourglass__falling-sand {\r\n  width: 1%;\r\n  height: 100%;\r\n  background: black;\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n}\r\n"],sourceRoot:""}]);const i=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,s){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(r)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(o[d]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);r&&o[A[0]]||(void 0!==s&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=s),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),s="/*# ".concat(a," */");return[e].concat([s]).join("\n")}return[e].join("\n")}}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var s=e[r]={id:r,exports:{}};return n[r](s,s.exports,t),s.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})};var r={};return(()=>{t.r(r),t.d(r,{default:()=>o});var n=t(931);const e=n=>{n.sandB.style.height=100-n.sandAPercent+"%",n.sandA.style.height=`${n.sandAPercent}%`,n.sandA.style.width="100%",n.sandB.style.width="100%"},a=n=>{let t=Date.now();n.theInterval=setInterval((()=>{n.timePassed=(Date.now()-t)/1e3,n.sandAPercent=n.sandAPercent-n.timePassed/n.time*100,n.sandBPercent=100-n.sandAPercent,e(n),t=Date.now(),n.sandAPercent<=0&&clearInterval(n.theInterval)}),10)},s=n=>{const t=n.getElementById("hourglassSandTop"),r=n.getElementById("hourglassSandBottom"),s=n.getElementById("hourglass"),o=n.getElementById("timeInput"),i={time:180,sandA:t,sandB:r,hourglass:s,timeInput:o,rotationTime:300,timePassed:0,theInterval:null,sandAPercent:100,sandBPercent:0,isFlipping:!1};o.value=i.time,a(i),(n=>{n.hourglass.addEventListener("click",(t=>{n.isFlipping||"number"===t.target.type||(n=>{clearInterval(n.theInterval),(async n=>{n.isFlipping=!0;const t=Date.now(),r=setInterval((()=>{const s=(Date.now()-t)/n.rotationTime*100,o=-1.8*s;let i;n.hourglass.style.transform=`rotate(${o>180?180:o}deg)`,i=s<50?s/50:1-(s-50)/50,n.sandA.style.height=`${Math.floor(n.sandAPercent+(n.sandAPercent>=2?100-n.sandAPercent:0)*i)}%`,n.sandA.style.width=`${Math.floor(n.sandAPercent+(n.sandAPercent>=2?100-n.sandAPercent:0)*(1-i))}%`,n.sandB.style.height=`${Math.floor(100-n.sandAPercent+(100-n.sandAPercent>=2?n.sandAPercent:0)*i)}%`,n.sandB.style.width=`${Math.floor(100-n.sandAPercent+(100-n.sandAPercent>=2?n.sandAPercent:0)*(1-i))}%`,s>=50&&(n.sandA.style.alignSelf="flex-start",n.sandB.style.alignSelf="flex-start"),s>=99&&(n.hourglass.style.transform="rotate(0)",n.sandA.style.alignSelf="flex-end",n.sandB.style.alignSelf="flex-end",clearInterval(r),n.sandAPercent=n.sandBPercent,n.sandBPercent=100-n.sandAPercent,e(n),a(n),n.isFlipping=!1)}),1)})(n)})(n)})),n.timeInput.addEventListener("change",(e=>{n.time=e.target.value>0?e.target.value:1}))})(i)},o=()=>{class e extends HTMLElement{constructor(){super();const e=document.createElement("template");e.innerHTML='<div class="hourglass__container" id="hourglass"> <div class="hourglass__rim"></div> <div class="hourglass__dome hourglass__dome--top"> <div class="hourglass__sand hourglass__sand--top" id="hourglassSandTop"></div> </div> <div class="hourglass__dome hourglass__dome--bottom"> <div class="hourglass__falling-sand" id="hourglassFallingSand"></div> <div class="hourglass__sand hourglass__sand--bottom" id="hourglassSandBottom"></div> </div> <div class="hourglass__rim hourglass__rim--bottom"> <input id="timeInput" type="number"/> </div> </div> ';let t=e.content;this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(t);const r=document.createElement("style");r.textContent=n.Z,this.shadowRoot.appendChild(r)}connectedCallback(){this.core(this.shadowRoot)}}e.prototype.core=s,customElements.define("an-hourglass",e)}})(),r})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,